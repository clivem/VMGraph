<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>SnmpGetStats</groupId>
    <version>1.0-SNAPSHOT</version>
    <packaging>jar</packaging>

    <name>SnmpGetStats</name>
    <artifactId>SnmpGetStats</artifactId>
    <url>http://www.springsource.org/spring-integration</url>

    <prerequisites>
        <maven>2.2.0</maven>
    </prerequisites>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <org.springframework.version>3.1.1.RELEASE</org.springframework.version>
        <slf4j.version>1.6.4</slf4j.version>
        <junit.version>4.10</junit.version>
    </properties>

    <repositories>
        <repository>
            <id>repository.springframework.maven.release</id>
            <name>Spring Framework Maven Release Repository</name>
            <url>http://maven.springframework.org/release</url>
        </repository>

        <repository>
			<id>snmp4j-repository</id>
			<name>SNMP4J Maven Repository Release</name>
			<url>https://server.oosnmp.net/dist/release/</url>
			<layout>default</layout>
			<releases>
				<enabled>true</enabled>
				<updatePolicy>never</updatePolicy>
			</releases>
			<snapshots>
				<enabled>false</enabled>
				<updatePolicy>never</updatePolicy>
			</snapshots>
		</repository>
    </repositories>

    <build>
        <plugins>
            <plugin>
                <artifactId>maven-eclipse-plugin</artifactId>
                <version>2.9</version>
                <configuration>
                    <additionalProjectnatures>
                        <projectnature>org.springframework.ide.eclipse.core.springnature</projectnature>
                    </additionalProjectnatures>
                    <additionalBuildcommands>
                        <buildcommand>org.springframework.ide.eclipse.core.springbuilder</buildcommand>
                    </additionalBuildcommands>
                    <downloadSources>true</downloadSources>
                    <downloadJavadocs>true</downloadJavadocs>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>2.3.2</version>
                <configuration>
                    <source>1.7</source>
                    <target>1.7</target>
                    <compilerArgument>-Xlint:all</compilerArgument>
                    <showWarnings>true</showWarnings>
                    <showDeprecation>true</showDeprecation>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>exec-maven-plugin</artifactId>
                <version>1.2.1</version>
                <configuration>
                    <mainClass>uk.org.vacuumtube.Main</mainClass>
                </configuration>
            </plugin>
        </plugins>
    </build>

    <dependencies>

        <!-- Testing -->
        
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>${junit.version}</version>
            <scope>test</scope>
        </dependency>

        <!-- Spring Integration -->
		
		<!--
		    Core utilities used by other modules.
		    Define this if you use Spring Utility APIs (org.springframework.core.*/org.springframework.util.*)
		-->
		<dependency>
		  <groupId>org.springframework</groupId>
		  <artifactId>spring-core</artifactId>
		  <version>${org.springframework.version}</version>
		  <exclusions>
            <exclusion>
              <groupId>commons-logging</groupId>
              <artifactId>commons-logging</artifactId>
            </exclusion>
          </exclusions>
		</dependency>

		<!--
		    Expression Language (depends on spring-core)
		    Define this if you use Spring Expression APIs (org.springframework.expression.*)
		-->
		<!--
		<dependency>
		  <groupId>org.springframework</groupId>
		  <artifactId>spring-expression</artifactId>
		  <version>${org.springframework.version}</version>
		</dependency>
		-->
		
		<!--
		    Bean Factory and JavaBeans utilities (depends on spring-core)
		    Define this if you use Spring Bean APIs (org.springframework.beans.*)
		-->
		<dependency>
		  <groupId>org.springframework</groupId>
		  <artifactId>spring-beans</artifactId>
		  <version>${org.springframework.version}</version>
		</dependency>
		 
		<!--
		    Aspect Oriented Programming (AOP) Framework (depends on spring-core, spring-beans)
		    Define this if you use Spring AOP APIs (org.springframework.aop.*)
		-->
		<dependency>
		  <groupId>org.springframework</groupId>
		  <artifactId>spring-aop</artifactId>
		  <version>${org.springframework.version}</version>
		</dependency>
		 
		<!--
		    Application Context (depends on spring-core, spring-expression, spring-aop, spring-beans)
		    This is the central artifact for Spring's Dependency Injection Container and is generally always defined
		-->
		<dependency>
		  <groupId>org.springframework</groupId>
		  <artifactId>spring-context</artifactId>
		  <version>${org.springframework.version}</version>
		</dependency>
		 
		<!--
		    Various Application Context utilities, including EhCache, JavaMail, Quartz, and Freemarker integration
		    Define this if you need any of these integrations
		-->
		<dependency>
		  <groupId>org.springframework</groupId>
		  <artifactId>spring-context-support</artifactId>
		  <version>${org.springframework.version}</version>
		</dependency>
		 
		<!--
		    Transaction Management Abstraction (depends on spring-core, spring-beans, spring-aop, spring-context)
		    Define this if you use Spring Transactions or DAO Exception Hierarchy
		    (org.springframework.transaction.*/org.springframework.dao.*)
		-->
		<dependency>
		  <groupId>org.springframework</groupId>
		  <artifactId>spring-tx</artifactId>
		  <version>${org.springframework.version}</version>
		</dependency>
		 
		<!--
		    JDBC Data Access Library (depends on spring-core, spring-beans, spring-context, spring-tx)
		    Define this if you use Spring's JdbcTemplate API (org.springframework.jdbc.*)
		-->
		<dependency>
		  <groupId>org.springframework</groupId>
		  <artifactId>spring-jdbc</artifactId>
		  <version>${org.springframework.version}</version>
		</dependency>
		 
		<!--
		    Object-to-Relation-Mapping (ORM) integration with Hibernate, JPA, and iBatis.
		    (depends on spring-core, spring-beans, spring-context, spring-tx)
		    Define this if you need ORM (org.springframework.orm.*)
		-->
		<dependency>
		  <groupId>org.springframework</groupId>
		  <artifactId>spring-orm</artifactId>
		  <version>${org.springframework.version}</version>
		</dependency>
		 
		<!--
		    Object-to-XML Mapping (OXM) abstraction and integration with JAXB, JiBX, Castor, XStream, and XML Beans.
		    (depends on spring-core, spring-beans, spring-context)
		    Define this if you need OXM (org.springframework.oxm.*)
		-->
		<!-- 
		<dependency>
		  <groupId>org.springframework</groupId>
		  <artifactId>spring-oxm</artifactId>
		  <version>${org.springframework.version}</version>
		</dependency>
		-->
		 
		<!--
		    Web application development utilities applicable to both Servlet and Portlet Environments
		    (depends on spring-core, spring-beans, spring-context)
		    Define this if you use Spring MVC, or wish to use Struts, JSF, or another web framework with Spring (org.springframework.web.*)
		-->
		<!-- dependency>
		  <groupId>org.springframework</groupId>
		  <artifactId>spring-web</artifactId>
		  <version>${org.springframework.version}</version>
		</dependency -->
		 
		<!--
		    Spring MVC for Servlet Environments (depends on spring-core, spring-beans, spring-context, spring-web)
		    Define this if you use Spring MVC with a Servlet Container such as Apache Tomcat (org.springframework.web.servlet.*)
		-->
		<!-- dependency>
		  <groupId>org.springframework</groupId>
		  <artifactId>spring-webmvc</artifactId>
		  <version>${org.springframework.version}</version>
		</dependency -->
		 
		<!--
		    Spring MVC for Portlet Environments (depends on spring-core, spring-beans, spring-context, spring-web)
		    Define this if you use Spring MVC with a Portlet Container (org.springframework.web.portlet.*)
		-->
		<!-- dependency>
		  <groupId>org.springframework</groupId>
		  <artifactId>spring-webmvc-portlet</artifactId>
		  <version>${org.springframework.version}</version>
		</dependency -->
		 
		<!--
		    Support for testing Spring applications with tools such as JUnit and TestNG
		    This artifact is generally always defined with a 'test' scope for the integration testing framework and unit testing stubs
		-->
		<dependency>
		  <groupId>org.springframework</groupId>
		  <artifactId>spring-test</artifactId>
		  <version>${org.springframework.version}</version>
		  <scope>test</scope>
		</dependency>
		
		<!-- commons-dbcp -->
		<dependency>
		  <groupId>commons-dbcp</groupId>
		  <artifactId>commons-dbcp</artifactId>
		  <version>1.4</version>
		  <exclusions>
		  	<exclusion>
		  	  <artifactId>commons-pool</artifactId>
		  	  <groupId>commons-pool</groupId>
		  	</exclusion>
		  </exclusions>
		</dependency>
		
		<!-- commons-pool -->
		<dependency>
		  <groupId>commons-pool</groupId>
		  <artifactId>commons-pool</artifactId>
		  <version>1.6</version>
		</dependency>

        <!-- Quartz -->
		<dependency>
		    <groupId>org.quartz-scheduler</groupId>
		    <artifactId>quartz</artifactId>
		    <version>2.1.5</version>
	        <exclusions>
	          <exclusion>
	            <artifactId>slf4j-api</artifactId>
	            <groupId>org.slf4j</groupId>
	          </exclusion>
	        </exclusions>
		</dependency>

		<!-- cglib -->
		<dependency>
		  <groupId>cglib</groupId>
		  <artifactId>cglib</artifactId>
		  <version>2.2</version>
		</dependency>

		<!-- Hibernate -->
		<dependency>
		  <groupId>org.hibernate</groupId>
		  <artifactId>hibernate-entitymanager</artifactId>
		  <version>4.1.2.Final</version>
		</dependency>
				
		<!-- MySQL -->
		<dependency>
		  <groupId>mysql</groupId>
		  <artifactId>mysql-connector-java</artifactId>
		  <version>5.1.19</version>
		</dependency>

		<!-- SNMP4J -->
		<dependency>
		  <groupId>org.snmp4j</groupId>
		  <artifactId>snmp4j</artifactId>
		  <version>2.1.0</version>
	        <exclusions>
	          <exclusion>
	          	<artifactId>log4j</artifactId>
	          	<groupId>log4j</groupId>
	          </exclusion>
	        </exclusions>
		</dependency>
		
		<!-- RRD4J -->
		<dependency>
		  <groupId>org.rrd4j</groupId>
		  <artifactId>rrd4j</artifactId>
		  <version>2.1.1</version>
		</dependency>
        
        <!-- Logging -->
        <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-classic</artifactId>
            <version>1.0.2</version>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
            <version>${slf4j.version}</version>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>log4j-over-slf4j</artifactId>
            <version>${slf4j.version}</version>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>jcl-over-slf4j</artifactId>
            <version>${slf4j.version}</version>
        </dependency>

    </dependencies>
</project>
